/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id("java")
    id("idea")
    id("org.openjfx.javafxplugin") version "0.1.0"
    application
}

sourceSets {
    main {
        java {
            srcDir("src")
        }
        resources {
            srcDir("src/resources")
        }
    }
    test {
        java {
            srcDir("test")
        }
    }
}

// IntelliJ IDEA add src as source dir
idea.module.sourceDirs.plusAssign(file("src"))
idea.module.resourceDirs.plusAssign(file("src/resources"))

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:5.9.3")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.9.2")

    // Add icon packs
    implementation("org.kordamp.ikonli:ikonli-zondicons-pack:12.3.1")
    implementation("org.kordamp.ikonli:ikonli-javafx:12.3.1")
}

javafx {
    version = "21"
    modules("javafx.controls", "javafx.fxml", "javafx.web")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

application {
    // Define the main class for the application.
    mainClass.set("anna.Main")
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
